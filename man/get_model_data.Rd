% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/computing_models.R
\name{get_model_data}
\alias{get_model_data}
\title{Get RCI Model Data Based on Party and Model Selection}
\usage{
get_model_data(
  party,
  model_type = c("vote_solidity", "potential_for_growth"),
  data,
  rci_prefix = "irc_",
  attitudegap_prefix = "attitudegap",
  saliency_prefix = "adj_saliency",
  ses_and_vis_to_include
)
}
\arguments{
\item{party}{The party to filter the data by.}

\item{model_type}{A character string specifying the model to use.
Supported models are "vote_solidity" and "potential_for_growth".}

\item{data}{A dataframe containing the data to be processed.}

\item{rci_prefix}{A character string specifying the prefix for RCI columns.}

\item{attitudegap_prefix}{A character string specifying the prefix for attitude gap columns.}

\item{saliency_prefix}{A character string specifying the prefix for saliency columns.}

\item{ses_and_vis_to_include}{Variables to include in the final dataset, passed as unquoted names. Vector used in dplyr::select() function. Can use selection helpers from tidyselect such as starts_with().}
}
\value{
A dataframe filtered and transformed based on the specified parameters.
}
\description{
This function filters and transforms data based on the specified model, party,
and other criteria. It supports two models: "vote_solidity" and "potential_for_growth".
It pivots data, filters by the highest or non-highest RCI values (based on the model),
filters by party, and selects specified columns.
}
\examples{
# Example usage:
# get_model_data(party = "CAQ",
#                model_type = "vote_solidity",
#                data = your_dataframe,
#                ses_and_vis_to_include = c(your_variables, starts_with("random_prefix")))
}
